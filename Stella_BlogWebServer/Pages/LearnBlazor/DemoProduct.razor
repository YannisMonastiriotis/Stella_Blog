@page "/learnBlazor/demoproduct"


<h2 class="text-primary"> Demo Product</h2>
<p>Favourites Total: @SelectedFavouriteCount</p>
<br />
<p>Last Selected Product: @SelectedProduct </p>
<div class="row" style="margin:0.5%;padding:0.4%;border:groove;background-color:azure;border-color:black;border-style:ridge">
    @foreach (var produck in Products)

    {

        <_productsAndProperties Product="produck" OnFavoriteUpdated="FavoriteCountUpdate"
                            OnLastSelectedProductChange="ShowNameOfSelectedProduct">
                        <One></One>
                        <Two></Two>
                        </_productsAndProperties>

    }
</div>

@code {
    List<Demo_Product> Products = new();
    private int SelectedFavouriteCount { get; set; } = 0;

    private string SelectedProduct { get; set; } = "";
    private bool isSelectedd { get; set; } = true;

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 12.99,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 16.99,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }

    protected void ShowNameOfSelectedProduct(string name)
    {

        SelectedProduct = name;


    }
    protected void UnClick()
    {
        isSelectedd = false;
    }
    protected void FavoriteCountUpdate(bool isSelected)
    {
        isSelected = isSelectedd;
        if (isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }
}
