@page "/learnBlazor/learnRouting/{parameter1}/{parameter2}"
@page "/learnBlazor/learnRouting/{parameter1}" 
@page "/learnRouting/"
@*BY DEFAULT PARAMETERS ARE STRINGS IF I WANT INT I HAVE TO WRITE IT LIKE THIS: {parameter1:int} ALSO NEED TO CHANGE FROM PARAMETERS IN THE BOTTOM*@
@page "/learnBlazor/learnRouting/"
@inject NavigationManager _NavigationManager
<h3>LearnRouting</h3>

<h4>Parameter 1:@Parameter1</h4>
<h4>Parameter 2:@Parameter2</h4>

@*FIRST WAY OF PASSING PARAMETERS TO URL AND THEN SHOWING THEM TO THE CLIENT*@

@{
    string par1 = "Mparmpa";
    string par2 = "Bam";
}
<a href="/learnBlazor/learnRouting/@par1/@par2" class="btn btn-primary">Testing!</a>

@*SECOND WAY OF PASSING PARAMETERS TO URL *@

@*<a href="/learnRouting/?Param1=Stella&Param2=Blog" class="btn btn-primary">Navigate to query parameters</a>*@
<button @onclick="NavigateToQueryParam"  class="btn btn-primary">Navigate to query parameters</button>

@*AND THEN SHOWING THEM TO THE CLIENT*@
<button class="btn btn-success" @onclick="LoadParameters">Load Params</button>


<br />
<h3>Query String Parameters</h3>

<h4>Parameter 1:@Param1</h4>
<h4>Parameter 2:@Param2</h4> 

@code {
    [Parameter]
    public string Parameter1 { get; set; }

    [Parameter]
    public string Parameter2 { get; set; } 
    public string Param1{ get; set; }
    public string Param2 { get; set; }

    private void LoadParameters(){
        var absoluteUri = new Uri(_NavigationManager.Uri);
        var queryParam = System.Web.HttpUtility.ParseQueryString(absoluteUri.Query);
        Param1 = queryParam["Param1"];
        Param2 = queryParam["Param2"];
    }

    private void NavigateToQueryParam()
    {
        _NavigationManager.NavigateTo("/learnRouting/?Param1=Stella&Param2=Blog");
    }
}
